<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nt.mapper.ContactInvationMapper">
  <resultMap id="BaseResultMap" type="com.nt.entity.ContactInvation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="contact_user_id" jdbcType="INTEGER" property="contactUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="tag" jdbcType="INTEGER" property="tag" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
     <result column="message" jdbcType="VARCHAR" property="message" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, contact_user_id, create_time, tag, category_id,message
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contact_invation
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="findInvationRecords"  resultMap="BaseResultMap">
    select 
    max(id) as id,user_id, contact_user_id,tag, category_id,message
    from contact_invation
    group by  user_id, contact_user_id,tag, category_id,message having  contact_user_id = #{contactid} and tag=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contact_invation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nt.entity.ContactInvation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contact_invation (user_id, contact_user_id, create_time, 
      tag, category_id,message)
    values (#{userId,jdbcType=INTEGER}, #{contactUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{tag,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER},#{message,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nt.entity.ContactInvation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contact_invation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="contactUserId != null">
        contact_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
       <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="contactUserId != null">
        #{contactUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
       <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nt.entity.ContactInvation">
    update contact_invation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="contactUserId != null">
        contact_user_id = #{contactUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
        <if test="message != null">
      message= #{message,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nt.entity.ContactInvation">
    update contact_invation
    set user_id = #{userId,jdbcType=INTEGER},
      contact_user_id = #{contactUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      tag = #{tag,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
       message = #{message,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>